#!/bin/bash 

source ../config/demo.config

# This script deletes running instances and brings up 
#   initialized Conjur Master & CLI nodes
#   and leaves the user logged into the CLI as the admin user

#################
main() {
  delete_all
  master_up
  cli_up
  ./exec-into-cli.sh
}

#################
delete_all() {
  echo "Deleting master.."
  bash -c "docker stop $CONJUR_MASTER_CONTAINER_NAME >& /dev/null; docker rm $CONJUR_MASTER_CONTAINER_NAME >& /dev/null" &

  echo "Deleting cli.."
  bash -c "docker stop $CLI_CONTAINER_NAME >& /dev/null; docker rm $CLI_CONTAINER_NAME >& /dev/null"

  echo "Deleting cache directory..."
  rm -rf $CACHE_DIR
}

#################
master_up() {

  # Bring up Conjur Master node
  # If docker-compose installed, replace all "docker run..." 
  #   command lines with "docker-compose up -d conjur"
  docker run -d \
    --name $CONJUR_MASTER_CONTAINER_NAME \
    --label role=conjur_node \
    -p "$CONJUR_MASTER_PORT:443" \
    -p "$CONJUR_MASTER_PGSYNC_PORT:5432" \
    -p "$CONJUR_MASTER_PGAUDIT_PORT:1999" \
    --restart always \
    --security-opt seccomp:unconfined \
    $CONJUR_APPLIANCE_IMAGE 

  # Configure Conjur Master node
  echo "Configuring Conjur master..."
  docker exec $CONJUR_MASTER_CONTAINER_NAME \
                evoke configure master     \
                -h $CONJUR_MASTER_HOST_NAME \
                -p $CONJUR_ADMIN_PASSWORD \
		--master-altnames "$MASTER_ALTNAMES" \
		--follower-altnames "$FOLLOWER_ALTNAMES" \
                $CONJUR_ACCOUNT

  mkdir -p $CACHE_DIR
  echo "Caching Conjur master cert ..."
  rm -f $CONJUR_CERT_FILE
  docker cp -L $CONJUR_MASTER_CONTAINER_NAME:/opt/conjur/etc/ssl/conjur.pem $CONJUR_CERT_FILE

  echo "Caching Conjur Follower seed files..."
  rm -f $FOLLOWER_SEED_FILE
  docker exec $CONJUR_MASTER_CONTAINER_NAME evoke seed follower conjur-follower > $FOLLOWER_SEED_FILE
}

#################
cli_up() {

  # Bring up CLI node
  # If docker-compose installed, replace "docker run..." 
  #   with "docker-compose up -d cli"
  docker run -d \
    --name $CLI_CONTAINER_NAME \
    --label role=cli \
    --restart always \
    --security-opt seccomp:unconfined \
    --add-host "$CONJUR_MASTER_HOST_NAME:$CONJUR_MASTER_HOST_IP" \
    --entrypoint sh \
    $CLI_IMAGE_NAME \
    -c "sleep infinity"

  # Initialize connection to service (create .conjurrc and conjur-xx.pem cert)
  docker exec $CLI_CONTAINER_NAME \
    bash -c "echo yes | conjur init -u $CONJUR_APPLIANCE_URL -a $CONJUR_ACCOUNT"

  # Login as admin
  docker exec $CLI_CONTAINER_NAME \
    conjur authn login -u admin -p $CONJUR_ADMIN_PASSWORD

  # Copy policy into CLI and load it
  docker cp ./policy.yml $CLI_CONTAINER_NAME:/policy.yml
  docker exec $CLI_CONTAINER_NAME \
    conjur policy load root /policy.yml
}

main "$@"
